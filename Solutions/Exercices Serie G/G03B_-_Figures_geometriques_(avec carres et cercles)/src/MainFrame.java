
import java.awt.Color;
import java.awt.event.MouseEvent;
import javax.swing.JColorChooser;

/**
 * @author FabFr297
 */
public class MainFrame extends javax.swing.JFrame {

    private Shapes shapes = new Shapes();
    private int fromX, fromY;
    private Color drawColor = Color.RED;

    public MainFrame() {
        initComponents();
        drawPanel.setShapes(shapes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawPanel = new DrawPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        drawPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                drawPanelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout drawPanelLayout = new javax.swing.GroupLayout(drawPanel);
        drawPanel.setLayout(drawPanelLayout);
        drawPanelLayout.setHorizontalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        drawPanelLayout.setVerticalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void drawPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawPanelMousePressed
        if (evt.isControlDown()) {
            drawColor = JColorChooser.showDialog(this, "Choose a draw color", drawColor);
        } else {
            fromX = evt.getX();
            fromY = evt.getY();
        }
    }//GEN-LAST:event_drawPanelMousePressed

    private void drawPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawPanelMouseReleased
        if (!evt.isControlDown()) {
            Shape shape;
            int x = Math.min(fromX, evt.getX());
            int y = Math.min(fromY, evt.getY());
            int width = Math.abs(evt.getX() - fromX);
            int height = Math.abs(evt.getY() - fromY);
            int side = Math.min(width, height);

            if (evt.isAltDown() || evt.getButton() == MouseEvent.BUTTON2) {
                shape = new Triangle(x, y, width, height, drawColor);
            } else if (evt.getButton() == MouseEvent.BUTTON1 && !evt.isShiftDown()) {
                shape = new Rectangle(x, y, width, height, drawColor);
            } else if (evt.getButton() == MouseEvent.BUTTON1 && evt.isShiftDown()) {
                shape = new Square(x, y, side, drawColor);
            } else if (evt.getButton() == MouseEvent.BUTTON3 && !evt.isShiftDown()) {
                shape = new Ellipse(x, y, width, height, drawColor);
            } else //if (evt.getButton()==MouseEvent.BUTTON3 && evt.isShiftDown())        
            {
                shape = new Circle(x, y, side, drawColor);
            }

            shapes.add(shape);
            repaint();
        }
    }//GEN-LAST:event_drawPanelMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private DrawPanel drawPanel;
    // End of variables declaration//GEN-END:variables
}
