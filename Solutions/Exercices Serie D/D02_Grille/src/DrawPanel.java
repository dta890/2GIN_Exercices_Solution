
import java.awt.Color;
import java.awt.Graphics;

/*
 * DrawPanel.java
 * @author Bob Fisch / Fred Faber
 */
public class DrawPanel extends javax.swing.JPanel {

    private int rows = 7;
    private int cols = 12;

    /**
     * creates new form DrawPanel
     */
    public DrawPanel() {
        initComponents();
    }

    /**
     * réaliser le dessin
     */
    @Override
    public void paintComponent(Graphics g) {
        // calculer la taille d'une cellule - version imprécise
        //p.ex: si vous avez beaucoup de colonnes, il reste souvent un bord à droite
        int cellWidth  = (getWidth() - 1)  / cols;
        int cellHeight = (getHeight() - 1) / rows;

        // calculer la taille d'une cellule - version précise
//        double cellWidth  = (getWidth() -1) /(double)cols;
//        double cellHeight = (getHeight()-1) /(double)rows;

        // changer la couleur
        g.setColor(Color.WHITE);
        // supprimer tout (dessiner un rectangle blanc)
        g.fillRect(0, 0, getWidth(), getHeight());

        // changer la couleur
        g.setColor(Color.BLACK);
        // dessiner les lignes horizontales
        for (int i = 0; i <= rows; i++) {
            g.drawLine(0, (int) (i * cellHeight), getWidth(), (int) (i * cellHeight));
        }
        // dessiner les lignes verticales
        for (int i = 0; i <= cols; i++) {
            g.drawLine((int) (i * cellWidth), 0, (int) (i * cellWidth), getHeight());
        }
    }

    /**
     * modifier le nombre de lignes
     *
     * @param pRows le nouveau nombre de lignes
     */
    public void setRows(int pRows) {
        rows = pRows;
        // refaire le dessin 
        repaint();  //ou bien ici ou bien dans MainFrame après l'appel de setRows
    }

    /**
     * modifier le nombre de colonnes
     *
     * @param pCols le nouveau nombre de colonnes
     */
    public void setCols(int pCols) {
        cols = pCols;
        // refaire le dessin 
        repaint(); //ou bien ici ou bien dans MainFrame après l'appel de setCols
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
