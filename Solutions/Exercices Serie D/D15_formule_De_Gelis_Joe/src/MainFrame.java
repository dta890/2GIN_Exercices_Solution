/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ennur
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        gielis = new Gielis(mSlider.getValue()/10.0, n1Slider.getValue()/100.0, n2Slider.getValue()/100.0, n3Slider.getValue()/100.0, toursSlider.getValue()*2*Math.PI);
        drawPanel1.setGielis(gielis);
    }
    
    private Gielis gielis;
    
    public void updateView(){
        drawPanel1.repaint();
        mLabel.setText(     "m :       " + gielis.getM()+"");
        n1Label.setText(    "n1 :      " + gielis.getN1()+"");
        n2Label.setText(    "n2 :      " + gielis.getN2()+"");
        n3Label.setText(    "n3 :      " + gielis.getN3()+"");
        maxPHILabel.setText("maxPhi :  " + gielis.getMaxPHI()+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mSlider = new javax.swing.JSlider();
        n1Slider = new javax.swing.JSlider();
        n2Slider = new javax.swing.JSlider();
        n3Slider = new javax.swing.JSlider();
        toursSlider = new javax.swing.JSlider();
        mLabel = new javax.swing.JLabel();
        n1Label = new javax.swing.JLabel();
        n2Label = new javax.swing.JLabel();
        n3Label = new javax.swing.JLabel();
        maxPHILabel = new javax.swing.JLabel();
        drawPanel1 = new DrawPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mSlider.setMajorTickSpacing(10);
        mSlider.setMaximum(60);
        mSlider.setMinorTickSpacing(1);
        mSlider.setPaintTicks(true);
        mSlider.setSnapToTicks(true);
        mSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mSliderStateChanged(evt);
            }
        });

        n1Slider.setMajorTickSpacing(100);
        n1Slider.setMaximum(600);
        n1Slider.setMinorTickSpacing(10);
        n1Slider.setPaintTicks(true);
        n1Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                n1SliderStateChanged(evt);
            }
        });

        n2Slider.setMajorTickSpacing(100);
        n2Slider.setMaximum(600);
        n2Slider.setMinorTickSpacing(10);
        n2Slider.setPaintTicks(true);
        n2Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                n2SliderStateChanged(evt);
            }
        });

        n3Slider.setMajorTickSpacing(100);
        n3Slider.setMaximum(600);
        n3Slider.setMinorTickSpacing(10);
        n3Slider.setPaintTicks(true);
        n3Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                n3SliderStateChanged(evt);
            }
        });

        toursSlider.setMajorTickSpacing(45);
        toursSlider.setMaximum(360);
        toursSlider.setMinorTickSpacing(15);
        toursSlider.setPaintTicks(true);
        toursSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toursSliderStateChanged(evt);
            }
        });

        mLabel.setText("m :");

        n1Label.setText("n1 :");

        n2Label.setText("n2 :");

        n3Label.setText("n3 :");

        maxPHILabel.setText("maxPhi:");

        javax.swing.GroupLayout drawPanel1Layout = new javax.swing.GroupLayout(drawPanel1);
        drawPanel1.setLayout(drawPanel1Layout);
        drawPanel1Layout.setHorizontalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        drawPanel1Layout.setVerticalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(n1Slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(toursSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                            .addComponent(n2Slider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                            .addComponent(n3Slider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(n2Label, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(n3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(maxPHILabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(n1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(drawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(n1Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(n1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(n2Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(n3Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(n2Label)
                        .addGap(41, 41, 41))
                    .addComponent(n3Label, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toursSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxPHILabel))
                .addGap(18, 18, 18)
                .addComponent(drawPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mSliderStateChanged
        gielis.setM(mSlider.getValue()/10.0);
//        System.out.println(mSlider.getValue()/10.0);
        updateView();
    }//GEN-LAST:event_mSliderStateChanged

    private void n1SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_n1SliderStateChanged
        gielis.setN1(n1Slider.getValue()/100.0000);
//        System.out.println(n1Slider.getValue()/100.0);
        updateView();
    }//GEN-LAST:event_n1SliderStateChanged

    private void n2SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_n2SliderStateChanged
        gielis.setN2(n2Slider.getValue()/100.0000);
//        System.out.println(n2Slider.getValue()/100.0);
        updateView();
    }//GEN-LAST:event_n2SliderStateChanged

    private void n3SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_n3SliderStateChanged
        gielis.setN3(n3Slider.getValue()/100.0000);
//        System.out.println(n3Slider.getValue()/100.0);
        updateView();
    }//GEN-LAST:event_n3SliderStateChanged

    private void toursSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toursSliderStateChanged
        gielis.setPhi(toursSlider.getValue()*2*Math.PI);
//        System.out.println(toursSlider.getValue()*2*Math.PI);
        updateView();
    }//GEN-LAST:event_toursSliderStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private DrawPanel drawPanel1;
    private javax.swing.JLabel mLabel;
    private javax.swing.JSlider mSlider;
    private javax.swing.JLabel maxPHILabel;
    private javax.swing.JLabel n1Label;
    private javax.swing.JSlider n1Slider;
    private javax.swing.JLabel n2Label;
    private javax.swing.JSlider n2Slider;
    private javax.swing.JLabel n3Label;
    private javax.swing.JSlider n3Slider;
    private javax.swing.JSlider toursSlider;
    // End of variables declaration//GEN-END:variables
}
