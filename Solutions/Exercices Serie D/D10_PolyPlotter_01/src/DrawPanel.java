
import java.awt.Graphics;

/*
 * DrawPanel.java
 * @author FabFr297
 */
public class DrawPanel extends javax.swing.JPanel {
    
    //Déclaration et instanciation d'un polynôme
    private Polynomial poly = null;
    
    
    /** Creates new form DrawPanel */
    public DrawPanel() {
        initComponents();
    }   
   
    
    //fixe le polynôme à représenter & actualisation du dessin
    public void setPoly(Polynomial poly) {
        this.poly = poly;
        repaint();
    }
    
    
    /**
     * représente le graphique de la courbe sur un canevas.
     * @param g le canevas cible
    */   
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        //effacer la surface de dessin
        g.setColor(getBackground());                 
        g.fillRect(0, 0, getWidth(), getHeight());
           
        if (poly!=null)  //pour éviter des erreurs lors du drag&drop du panneau  
            poly.draw(g, getWidth(), getHeight(), getForeground());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}